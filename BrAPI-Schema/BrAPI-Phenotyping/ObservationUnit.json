{
    "$defs": {
        "ObservationUnit": {
            "properties": {
                "observationUnitDbId": {
                    "description": "The ID which uniquely identifies an observation unit\n\nMIAPPE V1.1 (DM-70) Observation unit ID - Identifier used to identify the observation unit in data files containing the values observed or measured on that unit. Must be locally unique. ",
                    "type": "string"
                },
                "cross": {
                    "$ref": "Cross.json#/$defs/Cross",
                    "description": "the unique identifier for a cross",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "germplasm": {
                    "$ref": "Germplasm.json#/$defs/Germplasm",
                    "description": "The ID which uniquely identifies a germplasm",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "location": {
                    "$ref": "Location.json#/$defs/Location",
                    "description": "The ID which uniquely identifies a location, associated with this study",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "observationUnitName": {
                    "description": "A human readable name for an observation unit",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "observationUnitPUI": {
                    "description": "A Permanent Unique Identifier for an observation unit\n\nMIAPPE V1.1 (DM-72) External ID - Identifier for the observation unit in a persistent repository, comprises the name of the repository and the identifier of the observation unit therein. The EBI Biosamples repository can be used. URI are recommended when possible.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "program": {
                    "$ref": "Program.json#/$defs/Program",
                    "description": "The ID which uniquely identifies a program",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "seedLot": {
                    "$ref": "SeedLot.json#/$defs/SeedLot",
                    "description": "The unique identifier for the originating Seed Lot",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "study": {
                    "$ref": "Study.json#/$defs/Study",
                    "description": "The ID which uniquely identifies a study within the given database server",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                
                "trial": {
                    "$ref": "Trial.json#/$defs/Trial",
                    "description": "The ID which uniquely identifies a trial",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-one"
                },
                "samples": {
                    "title": "samples",
                    "description": "samples",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "Sample.json#/$defs/Sample",
                        "description": "Sample"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "events": {
                    "title": "events",
                    "description": "events",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-many",
                    "items": {
                        "$ref": "Event.json#/$defs/Event",
                        "description": "Event"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "images": {
                    "title": "images",
                    "description": "images",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "Image.json#/$defs/Image",
                        "description": "Image"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "observations": {
                    "title": "observations",
                    "description": "observations",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "Observation.json#/$defs/Observation",
                        "description": "Observation"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "additionalInfo": {
                    "title": "additionalInfo",
                    "description": "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestricted by the BrAPI specification.",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "AdditionalInfo.json#/$defs/AdditionalInfo",
                        "description": "AdditionalInfo"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "externalReferences": {
                    "title": "externalReferences",
                    "description": "An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "ExternalReference.json#/$defs/ExternalReference",
                        "description": "ExternalReference"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "observationUnitPosition": {
                    "$ref": "ObservationUnit.json#/$defs/ObservationUnitPosition",
                    "description": "All positional and layout information related to this Observation Unit \n\nMIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) \nor level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. \nLevels of observation must be consistent with those listed in the Study section.",
                    "referencedAttribute": "observationUnit",
                    "relationshipType": "one-to-one"
                },
                "treatments": {
                    "title": "treatments",
                    "description": "List of treatments applied to an observation unit.\n\nMIAPPE V1.1 (DM-74) Observation Unit factor value - List of values for each factor applied to the observation unit.",
                    "referencedAttribute": "observationUnits",
                    "relationshipType": "many-to-many",
                    "items": {
                        "$ref": "ObservationUnit.json#/$defs/Treatment",
                        "description": "Treatment"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                }
            },
            "required": [
                "observationUnitDbId"
            ],
            "title": "ObservationUnit",
            "type": "object"
        },
        "ObservationUnitPosition": {
            "properties": {
                "observationUnitPositionDbId": {
                    "description": "the unique identifier for a observation unit position",
                    "type": "string"
                },
                "entryType": {
                    "description": "The type of entry for this observation unit. ex. \"CHECK\", \"TEST\", \"FILLER\"",
                    "enum": [
                        "CHECK",
                        "TEST",
                        "FILLER",
                        null
                    ],
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "positionCoordinateX": {
                    "description": "The X position coordinate for an observation unit. Different systems may use different coordinate systems.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "positionCoordinateXType": {
                    "description": "The type of positional coordinate used. Must be one of the following values \n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nPLANTED_ROW - The physical planted row number \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n\nGRID_ROW - The row index number of a square grid overlay \n\nGRID_COL - The column index number of a square grid overlay \n\nMEASURED_ROW - The distance in meters from a defined 0-th row \n\nMEASURED_COL - The distance in meters from a defined 0-th column ",
                    "enum": [
                        "LONGITUDE",
                        "LATITUDE",
                        "PLANTED_ROW",
                        "PLANTED_INDIVIDUAL",
                        "GRID_ROW",
                        "GRID_COL",
                        "MEASURED_ROW",
                        "MEASURED_COL",
                        null
                    ],
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "positionCoordinateY": {
                    "description": "The Y position coordinate for an observation unit. Different systems may use different coordinate systems.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "positionCoordinateYType": {
                    "description": "The type of positional coordinate used. Must be one of the following values \n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n\nPLANTED_ROW - The physical planted row number  \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n\nGRID_ROW - The row index number of a square grid overlay \n\nGRID_COL - The column index number of a square grid overlay \n\nMEASURED_ROW - The distance in meters from a defined 0-th row \n\nMEASURED_COL - The distance in meters from a defined 0-th column ",
                    "enum": [
                        "LONGITUDE",
                        "LATITUDE",
                        "PLANTED_ROW",
                        "PLANTED_INDIVIDUAL",
                        "GRID_ROW",
                        "GRID_COL",
                        "MEASURED_ROW",
                        "MEASURED_COL",
                        null
                    ],
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "observationUnit": {
                    "$ref": "ObservationUnit.json#/$defs/ObservationUnit",
                    "description": "the unique identifier for an observation unit",
                    "referencedAttribute": "observationUnitPosition",
                    "relationshipType": "one-to-one"
                },
                "geoCoordinates": {
                    "$ref": "Coordinate.json#/$defs/Coordinate",
                    "description": "One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.",
                    "referencedAttribute": "observationUnitPosition",
                    "relationshipType": "many-to-one"
                },
                "observationLevel": {
                    "title": "observationLevel",
                    "description": "The exact level and level code of an observation unit. \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. \n\nMIAPPE V1.1 DM-71 Observation unit type \"Type of observation unit in textual form, usually one of the following: study, block, sub-block, plot, sub-plot, pot, plant. Use of other observation unit types is possible but not recommended. \nThe observation unit type can not be used to indicate sub-plant levels. However, observations can still be made on the sub-plant level, as long as the details are indicated in the associated observed variable (see observed variables). \nAlternatively, it is possible to use samples for more detailed tracing of sub-plant units, attaching the observations to them instead.\" ",
                    "referencedAttribute": "observationUnitPosition",
                    "relationshipType": "one-to-many",
                    "items": {
                        "$ref": "ObservationUnit.json#/$defs/ObservationLevel",
                        "description": "ObservationLevel"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "observationLevelRelationships": {
                    "title": "observationLevelRelationships",
                    "description": "Observation levels indicate the granularity level at which the measurements are taken. `levelName` \ndefines the level, `levelOrder` defines where that level exists in the hierarchy of levels. \n`levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are \nat the bottom of the hierarchy (ie plant > 6). `levelCode` is an ID code for this level tag. Identify \nthis observation unit by each level of the hierarchy where it exists. \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. \n\n**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** ",
                    "referencedAttribute": "observationUnitPositions",
                    "relationshipType": "many-to-many",
                    "items": {
                        "$ref": "ObservationUnit.json#/$defs/ObservationLevelRelationship",
                        "description": "ObservationLevelRelationship"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                }
            },
            "required": [
                "observationUnitPositionDbId"
            ],
            "title": "ObservationUnitPosition",
            "type": "object"
        },
        "ObservationLevel": {
            "properties": {
                "observationLevelDbId": {
                    "description": "the unique identifier for an observation level",
                    "type": "string"
                },
                "levelCode": {
                    "description": "An ID code or number to represent a real thing that may or may not be an an observation unit.\n<br/>For example, if the 'levelName' is 'plot', then the 'levelCode' would be the plot number or plot barcode. If this plot is also considered an ObservationUnit, then the appropriate observationUnitDbId should also be recorded.\n<br/>If the 'levelName' is 'field', then the 'levelCode' might be something like '3' or 'F3' to indicate the third field at a research station. ",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "levelName": {
                    "description": "A name for this level \n\n**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. ",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "levelOrder": {
                    "description": "`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`'s lower numbers \nare at the top of the hierarchy (ie field -> 1) and higher numbers are at the bottom of the hierarchy (ie plant -> 9). \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. ",
                    "type": [
                        "null",
                        "integer"
                    ]
                },
                "observationUnitPosition": {
                    "$ref": "ObservationUnit.json#/$defs/ObservationUnitPosition",
                    "description": "the unique identifier of a observation unit position",
                    "referencedAttribute": "observationLevel",
                    "relationshipType": "many-to-one"
                },
                "study": {
                    "$ref": "Study.json#/$defs/Study",
                    "description": "The ID which uniquely identifies a `Study` within the given database server",
                    "referencedAttribute": "observationLevels",
                    "relationshipType": "many-to-one"
                }
            },
            "required": [
                "observationLevelDbId"
            ],
            "title": "ObservationUnitLevel",
            "type": "object"
        },
        "ObservationLevelRelationship": {
            "properties": {
                "observationLevelRelationshipDbId": {
                    "description": "the unique identifier of an observation level relationship",
                    "type": "string"
                },
                "levelCode": {
                    "description": "An ID code or number to represent a real thing that may or may not be an an observation unit.\n<br/>For example, if the 'levelName' is 'plot', then the 'levelCode' would be the plot number or plot barcode. If this plot is also considered an ObservationUnit, then the appropriate observationUnitDbId should also be recorded.\n<br/>If the 'levelName' is 'field', then the 'levelCode' might be something like '3' or 'F3' to indicate the third field at a research station. ",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "levelName": {
                    "description": "A name for this level \n\n**Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. ",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "levelOrder": {
                    "description": "`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`'s lower numbers \nare at the top of the hierarchy (ie field -> 1) and higher numbers are at the bottom of the hierarchy (ie plant -> 9). \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\">Observation Levels documentation</a>. ",
                    "type": [
                        "null",
                        "integer"
                    ]
                },
                "observationUnitDbId": {
                    "description": "The ID which uniquely identifies an observation unit\n<br/>If this level has on ObservationUnit associated with it, record the observationUnitDbId here. This is intended to construct a strict hierarchy of observationUnits. \n<br/>If there is no ObservationUnit associated with this level, this field can set to NULL or omitted from the response.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "observationUnitPositions": {
                    "title": "observationUnitPositions",
                    "description": "List of observation unit positions associated to this level relationship",
                    "referencedAttribute": "observationLevelRelationships",
                    "relationshipType": "many-to-many",
                    "items": {
                        "$ref": "ObservationUnit.json#/$defs/ObservationUnitPosition",
                        "description": "ObservationUnitPosition"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                }
            },
            "required": [
                "observationLevelRelationshipDbId"
            ],
            "title": "ObservationUnitLevelRelationship",
            "type": "object"
        },
        "Treatment": {
            "properties": {
                "treatmentDbId": {
                    "description": "the unique identifier for a treatment",
                    "type": "string"
                },
                "factor": {
                    "description": "The type of treatment/factor. ex. 'fertilizer', 'inoculation', 'irrigation', etc\n\nMIAPPE V1.1 (DM-61) Experimental Factor type - Name/Acronym of the experimental factor.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "modality": {
                    "description": "The treatment/factor description. ex. 'low fertilizer', 'yellow rust inoculation', 'high water', etc\n\nMIAPPE V1.1 (DM-62) Experimental Factor description - Free text description of the experimental factor. This includes all relevant treatments planned and protocol planned for all the plants targeted by a given experimental factor. ",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "observationUnits": {
                    "title": "observationUnits",
                    "description": "List of observation units with this treatment applied",
                    "referencedAttribute": "treatments",
                    "relationshipType": "many-to-many",
                    "items": {
                        "$ref": "ObservationUnit.json#/$defs/ObservationUnit",
                        "description": "ObservationUnit"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                }
            },
            "required": [
                "treatmentDbId"
            ],
            "title": "Treatment",
            "type": "object"
        }
    },
    "$id": "https://brapi.org/Specification/BrAPI-Schema/BrAPI-Phenotyping/ObservationUnit.json",
    "$schema": "http://json-schema.org/draft/2020-12/schema"
}