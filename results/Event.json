{
    "model": "Event",
    "storageType": "sql",
    "database": "default-sql",
    "attributes": {
        "event_primary_key": "Int",
        "eventDbId": {
            "type": "String",
            "description": "Internal database identifier"
        },
        "eventDescription": {
            "type": "String",
            "description": "A detailed, human-readable description of this event\n<br/>MIAPPE V1.1 (DM-67) Event description - Description of the event, including details such as amount applied and possibly duration of the event. "
        },
        "eventType": {
            "type": "String",
            "description": "An identifier for this event type, in the form of an ontology class reference\n<br/>ICASA Management events allow for the following types: planting, fertilizer, irrigation, tillage, organic_material, harvest, bed_prep, inorg_mulch, inorg_mul_rem, chemicals, mowing, observation, weeding, puddling, flood_level, other\n<br/>MIAPPE V1.1 (DM-66) Event accession number - Accession number of the event type in a suitable controlled vocabulary (Crop Ontology)."
        },
        "eventTypeDbId": {
            "type": "String",
            "description": "An identifier for this event type, in the form of an ontology class reference\n<br/>ICASA Management events allow for the following types: planting, fertilizer, irrigation, tillage, organic_material, harvest, bed_prep, inorg_mulch, inorg_mul_rem, chemicals, mowing, observation, weeding, puddling, flood_level, other\n<br/>MIAPPE V1.1 (DM-66) Event accession number - Accession number of the event type in a suitable controlled vocabulary (Crop Ontology)."
        },
        "observation_units_ids": "[ Int ]",
        "study_id": "Int"
    },
    "associations": {
        "observationUnits": {
            "type": "many_to_many",
            "implementation": "foreignkey",
            "reverseAssociation": "events",
            "target": "ObservationUnit",
            "targetKey": "events_ids",
            "sourceKey": "observation_units_ids",
            "keysIn": "Event",
            "targetStorageType": "sql"
        },
        "study": {
            "type": "many_to_one",
            "implementation": "foreignkey",
            "reverseAssociation": "events",
            "target": "Study",
            "targetKey": "events_ids",
            "sourceKey": "study_id",
            "keysIn": "Event",
            "targetStorageType": "sql"
        }
    },
    "internalId": "event_primary_key"
}